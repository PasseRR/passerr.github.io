{
  "fileTypes": [
    "ftl",
    "freemarker"
  ],
  "foldingStartMarker": "(?x)\n\t\t(<(?i:head|body|table|thead|tbody|tfoot|tr|div|nav|section|aside|header|select|fieldset|style|script|ul|ol|form|dl)\\b.*?>\n\t\t|<!--(?!.*-->)\n\t\t|\\{\\s*($|\\?>\\s*$|//|/\\*(.*\\*/\\s*$|(?!.*?\\*/)))\n\t\t|(\\[|<)(\\#|@)\\w+.*\\(\\]|>)\n\t\t)",
  "foldingStopMarker": "(?x)\n\t\t(</(?i:head|body|table|thead|tbody|tfoot|tr|div|nav|section|aside|header|select|fieldset|style|script|ul|ol|form|dl)>\n\t\t|^\\s*-->\n\t\t|(^|\\s)\\}\n\t\t|(\\[|<)/(\\#|@)\\w+.*(\\]|>)\n\t\t)",
  "keyEquivalent": "^~F",
  "name": "freemarker",
  "repository": {
    "attributes": {
      "begin": "\\s*(\\.[a-zA-Z][a-zA-Z0-9_-]*\\s*\u003d\\s*)",
      "beginCaptures": {
        "1": {
          "name": "support.class.attribute-begin.fluent"
        }
      },
      "end": "^(?\u003d\\s*[^\\.])",
      "patterns": [
        {
          "include": "#placeable"
        }
      ]
    },
    "comment": {
      "match": "^##?#?\\s.*$",
      "name": "comment.fluent"
    },
    "function-comma": {
      "match": ",",
      "name": "support.function.function-comma.fluent"
    },
    "function-named-argument": {
      "begin": "([a-zA-Z0-9]+:)\\s*([\"a-zA-Z0-9]+)",
      "beginCaptures": {
        "1": {
          "name": "support.function.named-argument.name.fluent"
        },
        "2": {
          "name": "variable.other.named-argument.value.fluent"
        }
      },
      "end": "(?\u003d\\)|,|\\s)",
      "name": "variable.other.named-argument.fluent"
    },
    "function-positional-argument": {
      "match": "\\$[a-zA-Z0-9_-]+",
      "name": "variable.other.function.positional-argument.fluent"
    },
    "invalid-placeable-string-missing-end-quote": {
      "match": "\"[^\"]+$",
      "name": "invalid.illegal.wrong-placeable-missing-end-quote.fluent"
    },
    "invalid-placeable-wrong-placeable-missing-end": {
      "match": "([^}A-Z]*$|[^-][^\u003e]$)\\b",
      "name": "invalid.illegal.wrong-placeable-missing-end.fluent"
    },
    "message": {
      "begin": "^(-?[a-zA-Z][a-zA-Z0-9_-]*\\s*\u003d\\s*)",
      "beginCaptures": {
        "1": {
          "name": "support.class.message-identifier.fluent"
        }
      },
      "contentName": "string.fluent",
      "end": "^(?\u003d\\S)",
      "patterns": [
        {
          "include": "#attributes"
        },
        {
          "include": "#placeable"
        }
      ]
    },
    "placeable": {
      "begin": "({)",
      "beginCaptures": {
        "1": {
          "name": "keyword.placeable.begin.fluent"
        }
      },
      "contentName": "variable.other.placeable.content.fluent",
      "end": "(})",
      "endCaptures": {
        "1": {
          "name": "keyword.placeable.end.fluent"
        }
      },
      "patterns": [
        {
          "include": "#placeable-string"
        },
        {
          "include": "#placeable-function"
        },
        {
          "include": "#placeable-reference-or-number"
        },
        {
          "include": "#selector"
        },
        {
          "include": "#invalid-placeable-wrong-placeable-missing-end"
        },
        {
          "include": "#invalid-placeable-string-missing-end-quote"
        },
        {
          "include": "#invalid-placeable-wrong-function-name"
        }
      ]
    },
    "placeable-function": {
      "begin": "([A-Z][A-Z0-9_-]*\\()",
      "beginCaptures": {
        "1": {
          "name": "support.function.placeable-function.call.begin.fluent"
        }
      },
      "contentName": "string.placeable-function.fluent",
      "end": "(\\))",
      "endCaptures": {
        "1": {
          "name": "support.function.placeable-function.call.end.fluent"
        }
      },
      "patterns": [
        {
          "include": "#function-comma"
        },
        {
          "include": "#function-positional-argument"
        },
        {
          "include": "#function-named-argument"
        }
      ]
    },
    "placeable-reference-or-number": {
      "match": "((-|\\$)[a-zA-Z0-9_-]+|[a-zA-Z][a-zA-Z0-9_-]*|[0-9]+)",
      "name": "variable.other.placeable.reference-or-number.fluent"
    },
    "placeable-string": {
      "begin": "(\")(?\u003d[^\\n]*\")",
      "beginCaptures": {
        "1": {
          "name": "variable.other.placeable-string-begin.fluent"
        }
      },
      "contentName": "string.placeable-string-content.fluent",
      "end": "(\")",
      "endCaptures": {
        "1": {
          "name": "variable.other.placeable-string-end.fluent"
        }
      }
    },
    "selector": {
      "begin": "(-\u003e)",
      "beginCaptures": {
        "1": {
          "name": "support.function.selector.begin.fluent"
        }
      },
      "contentName": "string.selector.content.fluent",
      "end": "^(?\u003d\\s*})",
      "patterns": [
        {
          "include": "#selector-item"
        }
      ]
    },
    "selector-item": {
      "begin": "(\\s*\\*?\\[)([a-zA-Z0-9_-]+)(\\]\\s*)",
      "beginCaptures": {
        "1": {
          "name": "support.function.selector-item.begin.fluent"
        },
        "2": {
          "name": "variable.other.selector-item.begin.fluent"
        },
        "3": {
          "name": "support.function.selector-item.begin.fluent"
        }
      },
      "contentName": "string.selector-item.content.fluent",
      "end": "^(?\u003d(\\s*})|(\\s*\\[)|(\\s*\\*))",
      "patterns": [
        {
          "include": "#placeable"
        }
      ]
    },
    "wrong-line": {
      "match": ".*",
      "name": "invalid.illegal.wrong-line.fluent"
    }
  },
  "patterns": [
    {
      "begin": "[<\\[]#--",
      "captures": {
        "0": {
          "name": "punctuation.definition.comment.ftl"
        }
      },
      "end": "--[>\\]]",
      "name": "comment.block.ftl"
    },
    {
      "captures": {
        "1": {
          "name": "punctuation.definition.function.ftl"
        },
        "2": {
          "name": "punctuation.definition.function.ftl"
        },
        "3": {
          "name": "entity.name.function.ftl"
        },
        "5": {
          "name": "variable.parameter.function.ftl"
        },
        "8": {
          "name": "entity.name.function.ftl"
        },
        "9": {
          "name": "punctuation.definition.function.ftl"
        }
      },
      "match": "([<\\[](#|@))(\\w+(\\.\\w+)*)((\\s+[^>\\]]+)*?)\\s*((\\/)?([>\\]]))",
      "name": "meta.function.ftl"
    },
    {
      "captures": {
        "1": {
          "name": "punctuation.definition.function.ftl"
        },
        "2": {
          "name": "punctuation.definition.function.ftl"
        },
        "3": {
          "name": "entity.name.function.ftl"
        },
        "5": {
          "name": "punctuation.definition.function.ftl"
        }
      },
      "match": "([<\\[]\\/(#|@))(\\w+(\\.\\w+)*)\\s*([>\\]])",
      "name": "meta.function.ftl"
    },
    {
      "captures": {
        "1": {
          "name": "punctuation.definition.variable.ftl"
        },
        "3": {
          "name": "entity.name.function.ftl"
        },
        "4": {
          "name": "punctuation.definition.variable.ftl"
        }
      },
      "match": "(\\$\\{)\\.?[a-zA-Z_\\(][\\w\\(\\)+-\\/\\*]+(\\.?[\\w\\(\\)+-\\/\\*]+)*(.*?|\\?\\?|\\!)?(\\})",
      "name": "variable.other.readwrite.local.ftl"
    },
    {
      "include": "text.html.basic"
    },
    {
      "include": "#comment"
    },
    {
      "include": "#message"
    }
  ],
  "scopeName": "text.html.ftl"
}
